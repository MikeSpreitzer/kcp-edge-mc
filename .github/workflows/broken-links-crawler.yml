name: Broken Links Crawler
run-name: Broken Links Crawler - ${{ github.ref_name }}

env:
  PASSED_BRANCH: ${{ inputs.branch }}

on:
  # So we can trigger manually if needed
  workflow_dispatch:
    inputs:
      branch:
        required: true
        type: string
        description: the branch to be translated to the version to check

  # Normal use is being called on a particular branch
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
        description: the branch to be translated to the version to check

permissions:
  contents: write

jobs:
  debug-event:
    name: debug-event-contents
    runs-on: ubuntu-latest
    steps:
      - run: echo "event name is:" ${{ github.event_name }}
      - run: echo "event type is:" ${{ github.event.action }}
      - run: echo "event type is:" ${{ github.repository }}
      - run: echo "GITHUB_REF=<$GITHUB_REF>"
      - run: echo "GITHUB_REPOSITORY=<$GITHUB_REPOSITORY>"
      - run: echo "PASSED_BRANCH=<$PASSED_BRANCH>"

  broken-links-crawler:
    name: broken-links-crawler
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: get workflow_dispatch branch name
        shell: bash
        run: |
            branch="$PASSED_BRANCH"
            echo "branch=$branch" >> $GITHUB_OUTPUT
            if [ "$branch" == main ]
            then version=unreleased-development
            else version="$branch"
            fi
            echo "version=$version" >> $GITHUB_OUTPUT
            if [ "$GITHUB_REPOSITORY_OWNER" == kubestellar ]
            then site=docs.kubestellar.io
            else site=${GITHUB_REPOSITORY/\//.github.io/}
            fi
            echo "site=$site" >>$GITHUB_OUTPUT

        id: extract_branch
        if: github.event_name != 'pull_request' && github.event_name != 'push'
#         run: echo workflow_dispatch - running on branch ${GITHUB_REF##*/}

      - name: echo workflow_dispatch branch name
        run: |
            echo workflow_dispatch - runhing on site ${{ steps.extract_branch.outputs.site }}
            echo workflow_dispatch - running on branch ${{ steps.extract_branch.outputs.branch }}
            echo workflow_dispatch - running on version ${{ steps.extract_branch.outputs.version }}
        if: github.event_name != 'pull_request' && github.event_name != 'push'

      - uses: ScholliYT/Broken-Links-Crawler-Action@fix-http-redirects
        with:
          website_url: https://${{ steps.extract_branch.outputs.site }}/${{ steps.extract_branch.outputs.version }}
          exclude_url_prefix: 'mailto:,https://drive.google.com'
          exclude_url_contained: '#__,/.,.svg'
          resolve_before_filtering: 'true'
          verbose: 'true'
          max_retry_time: 30
          max_retries: 5
          max_depth: 4
        if: github.event_name != 'pull_request' && github.event_name != 'push'
        
      - name: echo pull_request branch name
        run: echo pull_request - running on branch ${{ github.event.pull_request.base.ref }}
        if: github.event_name == 'pull_request' 
#         $GITHUB_BASE_REF

      - uses: ScholliYT/Broken-Links-Crawler-Action@fix-http-redirects
        with:
          website_url: https://docs.kubestellar.io/${{ github.event.pull_request.base.ref }}
          include_url_prefix: https://docs.kubestellar.io/${{ github.event.pull_request.base.ref }}
          exclude_url_prefix: 'mailto:,https://drive.google.com'
          exclude_url_contained: '#__,/.,.svg'
          resolve_before_filtering: 'true'
          verbose: 'true'
          max_retry_time: 30
          max_retries: 5
          max_depth: 4
        if: github.event_name == 'pull_request' 

      - name: echo push branch name
        run: echo push - running on branch ${{ github.event.push.base.ref }}
        if: github.event_name == 'push' 

      - uses: ScholliYT/Broken-Links-Crawler-Action@fix-http-redirects
        with:
          website_url: https://docs.kubestellar.io/${{ github.event.push.base.ref }}
          include_url_prefix: https://docs.kubestellar.io/${{ github.event.push.base.ref }}
          exclude_url_prefix: 'mailto:,https://drive.google.com'
          exclude_url_contained: '#__,/.,.svg'
          resolve_before_filtering: 'true'
          verbose: 'true'
          max_retry_time: 30
          max_retries: 5
          max_depth: 4
        if: github.event_name == 'push'
          
